[gd_scene load_steps=7 format=2]

[ext_resource path="res://enemy/enemy1.png" type="Texture" id=2]

[sub_resource type="GDScript" id=5]
script/source = "extends Area2D

signal shooting

const death_effect_scene = preload(\"res://effect/EnemyDeathEffect.tscn\")
const bullet_scene = preload(\"res://bullet/Bullet1.tscn\")

export var vertical_speed := 100
export var max_health: int = 5
export var health: int = max_health
export var harm = 2 ## Damage the enemy does to others on contact (not projectile damage)
onready var world = $\"..\"
onready var shoot_vector = Vector2(1,1)
export var shoot_interval = 0.1
var timer = Timer.new()

func _ready():
	$ProgressBar.value = health
	## Timer wip
	timer.wait_time = shoot_interval
	timer.start()

func _physics_process(delta):
	position.y += vertical_speed * delta
	$Aiming.rotation_degrees += 1
	shoot()
	
## Enemy getting damaged
func damage(amount: int):
	health -= amount
	$ProgressBar.value = health
	if health <= 0:
		health = 0
		print(self, \" died\")
		## Enemy death effect animation
		var death_effect = death_effect_scene.instance()
		get_parent().add_child(death_effect)
		death_effect.global_position = global_position
		queue_free()

func shoot():
	var bullet_instance = bullet_scene.instance()
	shoot_vector = $Aiming/Position2D.global_position - global_position
	shoot_vector.normalized()
	bullet_instance.global_position = $Aiming/Position2D.global_position
	world.add_child(bullet_instance)
	bullet_instance.set_vector(shoot_vector)

func _on_VisibilityNotifier2D_screen_exited():
	queue_free()

## Enemy collisions
func _on_Enemy_area_entered(area):
	print(\"Enemy_area_entered: \", area, \", groups: \", area.get_groups())
	
	if area.is_in_group(\"player_bullet\"): ## Collision with players bullet
		damage(area.harm) ## Damages enemy (self) with bullets (area) harm
		print(\"enemy hit by player bullet\")
		print(\"bullet harm: \", area.harm, \", enemy health: \", health)
		area.queue_free()

func _on_Enemy_body_entered(body):
	print(\"Enemy_body_entered: \", body)
	
	if body.is_in_group(\"player\"): ## Collision with player
		body.damage(harm) ## Damages player (body) with enemys harm
		self.damage(body.harm) ## Damages enemy (self) with players (body) harm
		print(\"collision with player\")
		print(\"enemy harm: \", harm, \", player health: \", body.health)
		print(\"player harm: \", body.harm, \", enemy health: \", health)
"

[sub_resource type="Gradient" id=1]
offsets = PoolRealArray( 0 )
colors = PoolColorArray( 0.784314, 0, 0, 1 )

[sub_resource type="GradientTexture" id=2]
gradient = SubResource( 1 )

[sub_resource type="StyleBoxTexture" id=3]
texture = SubResource( 2 )
region_rect = Rect2( 0, 0, 2048, 1 )

[sub_resource type="Animation" id=4]
resource_name = "rotate"

[node name="Enemy" type="Area2D" groups=["enemy"]]
script = SubResource( 5 )

[node name="Sprite" type="Sprite" parent="."]
rotation = 3.14159
texture = ExtResource( 2 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
polygon = PoolVector2Array( 8, 0, 51, -3, 50, 5, 8, 20, 0, 48, -8, 20, -50, 5, -51, -3, -8, 0, -3, -33, -16, -42, 15, -42, 3, -33 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="."]
position = Vector2( -1, -1 )
scale = Vector2( 5.25, 4.75 )

[node name="ProgressBar" type="ProgressBar" parent="."]
margin_left = -32.0
margin_top = -62.0
margin_right = 32.0
margin_bottom = -48.0
custom_styles/fg = SubResource( 3 )
max_value = 5.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/rotate = SubResource( 4 )

[node name="Aiming" type="Node2D" parent="."]
rotation = -6.00219

[node name="Position2D" type="Position2D" parent="Aiming"]
position = Vector2( 16.0843, 55.7252 )
rotation = -0.00698132

[connection signal="area_entered" from="." to="." method="_on_Enemy_area_entered"]
[connection signal="body_entered" from="." to="." method="_on_Enemy_body_entered"]
[connection signal="screen_exited" from="VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_exited"]
